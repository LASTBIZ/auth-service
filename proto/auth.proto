syntax = "proto3";

package auth;

option go_package = "./pkg/auth";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc LoginByPassword(LoginByPasswordRequest) returns (LoginResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc RefreshToken(RefreshTokenRequest) returns(RefreshTokenResponse) {}
  rpc Callback(CallbackRequest) returns (CallbackResponse) {}
  rpc CheckRegister(CheckRegisterRequest) returns(CheckRegisterResponse) {}
  rpc ChangePassword(ChangePasswordRequest) returns(ChangePasswordResponse) {}
}

message ChangePasswordRequest {
  string password = 1;
  string new_password = 2;
  string email = 3;
}

message ChangePasswordResponse {
  int64 status = 1;
  string error = 2;
}

// Register
message CheckRegisterRequest {
  string email = 1;
  int64  user_id = 2;
  bool pass = 3;
}

message CheckRegisterResponse {
  int64 status = 1;
  string error = 2;
  bool registered = 3;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string provider = 3;
  string first_name = 4;
  string last_name = 5;
}

message ProviderCode {

}

message RegisterResponse {
  int64 status = 1;
  string redirect = 2;
  string error = 3;
}

// Login
message LoginByPasswordRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

// Validate
message ValidateRequest { string token = 1; }

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  int64 userId = 3;
}

//RefreshToken
message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  int64 status = 1;
  string error = 2;
  string access_token = 3;
  string refresh_token = 4;
}

//Callback
message CallbackRequest {
  string provider = 1;
  string oauth_code = 2;
  string state = 3;
}

message CallbackResponse {
  int64 status = 1;
  string error = 2;
  Token token = 3;
}

message Token {
  string access_token = 1;
  string refresh_token = 2;
}